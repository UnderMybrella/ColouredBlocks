package org.abimon.mods.minecraft.dnc;

import net.minecraft.command.CommandBase;
import net.minecraft.command.CommandException;
import net.minecraft.command.ICommandSender;
import net.minecraft.command.PlayerNotFoundException;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.EntityPlayerMP;
import net.minecraft.item.ItemEditableBook;
import net.minecraft.item.ItemStack;
import net.minecraft.item.ItemWritableBook;
import net.minecraft.nbt.NBTBase;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.server.MinecraftServer;

public class CommandUseCommand extends CommandBase {

	@Override
	public String getCommandName() {
		return "useCommand";
	}

	@Override
	public String getCommandUsage(ICommandSender var1) {
		return "/useCommand";
	}

	@Override
	public void processCommand(ICommandSender var1, String[] var2) {
		EntityPlayerMP player = null;

		if (var1 instanceof EntityPlayerMP)
		{
			player = (EntityPlayerMP)var1;
		}
		else
		{
			String playerName = var2[1];
			EntityPlayerMP isPlayer = MinecraftServer.getServer().getConfigurationManager().getPlayerForUsername(playerName);
			if(isPlayer == null)
				throw new PlayerNotFoundException("You must specify which player you wish to perform this action on.", new Object[0]);
			player = isPlayer;
		}
		
		ItemStack item = player.getHeldItem();
		if(item == null)
			throw new CommandException("Player " + player.getCommandSenderName() + " is not holding a writable book!");
		if(item.getItem() instanceof ItemWritableBook)
		{
			try
			{
				MinecraftServer.getServer().getCommandManager().executeCommand(player, joinPages(item.getTagCompound().getTag("pages")));
			}
			catch(CommandException th)
			{
				throw th;
			}
		}
		else if(item.getItem() instanceof ItemEditableBook)
		{
			System.out.println(item.getTagCompound());
		}
	}

	private String joinPages(NBTBase tag) {
		if(tag instanceof NBTTagList)
		{
			String joined = "";
			NBTTagList list = (NBTTagList) tag;
		}
		return null;
	}

}
