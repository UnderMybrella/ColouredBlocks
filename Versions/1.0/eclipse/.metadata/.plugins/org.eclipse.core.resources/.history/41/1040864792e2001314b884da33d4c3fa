package org.abimon.mods.minecraft.deco;

import java.util.HashMap;

import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Blocks;
import net.minecraft.item.Item;
import net.minecraft.item.crafting.CraftingManager;
import net.minecraft.item.crafting.IRecipe;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.StringTranslate;
import net.minecraftforge.client.MinecraftForgeClient;
import cpw.mods.fml.client.registry.RenderingRegistry;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;

@Mod(modid = DecorationMod.MODID, version = DecorationMod.VERSION, name = DecorationMod.NAME)
public class DecorationMod
{
    public static final String MODID = "decomod";
    public static final String VERSION = "1.0";
    public static final String NAME = "The Decoration Mod";
    
    public static final IRecipe decoRecipes = new DecoRecipes();
    
    public static final Block decoBlock = new DecoBlock(Material.rock).setBlockTextureName("stone");
    public static final Item decoPlacer = new DecoItem();
    
    public static final int RENDER = RenderingRegistry.getNextAvailableRenderId();
	public static HashMap<Integer, String> TYPE_MAPPING = new HashMap<Integer, String>();
    
    @EventHandler
    public void init(FMLInitializationEvent event)
    {
    	TYPE_MAPPING.put(0, "Structure Block");
    	CraftingManager.getInstance().getRecipeList().add(decoRecipes);
    	RenderingRegistry.registerBlockHandler(RENDER, new DecoRender());
    	//MinecraftForgeClient.registerItemRenderer(decoPlacer, new DecoRender());
    	TileEntity.addMapping(DecoTileEntity.class, "DecoTileEntity");
    	GameRegistry.registerBlock(decoBlock, "DecorationBlock");
    	GameRegistry.registerItem(decoPlacer, "DecorationItem");
    }
    
}
