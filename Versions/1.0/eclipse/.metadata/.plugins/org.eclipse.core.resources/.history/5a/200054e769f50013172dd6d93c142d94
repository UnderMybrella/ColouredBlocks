package org.abimon.mods.minecraft.colouredBlocks;

import java.util.List;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.util.IIcon;
import net.minecraft.world.World;

public class ItemCrayon extends Item 
{
    @SideOnly(Side.CLIENT)
	public IIcon crayon;
    @SideOnly(Side.CLIENT)
	public IIcon crayonColour;

	public void addInformation(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, List par3List, boolean par4) 
	{
		NBTTagCompound nbt = par1ItemStack.getTagCompound();
		par3List.add("Colour: None");
		par3List.add("Uses left: " + (256 - par1ItemStack.getItemDamage()));
	}

	@SideOnly(Side.CLIENT)
	@Override
	public void registerIcons(IIconRegister par1IconRegister)
	{
		System.out.println("Registering...");
		this.crayon = par1IconRegister.registerIcon(ColouredBlocks.MODID + ":" + "crayon");
		this.crayonColour = par1IconRegister.registerIcon(ColouredBlocks.MODID + ":" + "crayonColour");
	}

	@SideOnly(Side.CLIENT)
	public int getColorFromItemStack(ItemStack par1ItemStack, int par2)
	{
		return 16777215;
	}

	@SideOnly(Side.CLIENT)
	public void getSubItems(Item item, CreativeTabs tab, List list)
	{
		NBTTagCompound nbt = new NBTTagCompound();
		ItemStack stack = new ItemStack(item, 1, 0);
		list.add(stack);
	}

	/**
	 * Return the correct icon for rendering based on the supplied ItemStack and render pass.
	 *
	 * Defers to {@link #getIconFromDamageForRenderPass(int, int)}
	 * @param stack to render for
	 * @param pass the multi-render pass
	 * @return the icon
	 */
    @SideOnly(Side.CLIENT)
	public IIcon getIcon(ItemStack stack, int pass)
	{
		if(pass == 1)
			return crayonColour;
		else
			return crayon;
	}

	@SideOnly(Side.CLIENT)
	public boolean requiresMultipleRenderPasses()
	{
		return true;
	}

	public boolean onItemUse(ItemStack par1ItemStack, EntityPlayer par2EntityPlayer, World par3World, int x, int y, int z, int face, float posX, float posY, float posZ)
	{
		return false;
	}

	public int getMaxDamage()
	{
		return 256;
	}


}
