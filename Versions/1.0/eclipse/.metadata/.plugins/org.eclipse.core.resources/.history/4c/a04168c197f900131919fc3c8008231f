package org.abimon.mods.minecraft.colouredBlocks;

import net.minecraft.init.Items;
import net.minecraft.inventory.InventoryCrafting;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.IRecipe;
import net.minecraft.world.World;

public class ColouredRecipes implements IRecipe 
{
	
	public static final ItemStack[][] ESSENSE_RECIPE = new ItemStack[][]{{new ItemStack(Items.dye), new ItemStack(Items.dye), new ItemStack(Items.dye)}, 
																		 {new ItemStack(Items.dye), new ItemStack(Items.sugar), new ItemStack(Items.dye)},
																		 {new ItemStack(Items.dye), new ItemStack(Items.dye), new ItemStack(Items.dye)}};

	@Override
	public boolean matches(InventoryCrafting var1, World var2) 
	{
		ItemStack[][] items = getItems(var1);

		return false;
	}
	
	public boolean checkRecipe(ItemStack[][] items, ItemStack[][] recipe, boolean ignoreDamage, boolean ignoreNBT)
	{
		boolean recipeCorrect = true;
		for(int x = 0; x < 3; x++)
			for(int y = 0; y < 3; y++)
			{
				ItemStack item = items[x][y];
				ItemStack recipeItem = recipe[x][y];
				if(item == null)
					if(recipeItem == null)
						continue;
					else
					{
						recipeCorrect = false;
						break;
					}
			}
		return false;
	}
	
	public ItemStack[][] getItems(InventoryCrafting var1)
	{
		ItemStack[][] items = new ItemStack[3][3];
		for(int x = 0; x < 3; x++)
			for(int y = 0; y < 3; y++)
				items[x][y] = var1.getStackInRowAndColumn(x, y);
		return items;
	}

	@Override
	public ItemStack getCraftingResult(InventoryCrafting var1) {
		return null;
	}

	@Override
	public int getRecipeSize() {
		return 9;
	}

	@Override
	public ItemStack getRecipeOutput() {
		return null;
	}

}
